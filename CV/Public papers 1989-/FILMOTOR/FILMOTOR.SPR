R 65,T 5
HUSK: TEGNET \ SKAL SKRIVES KORREKT SOM \.
LINJER MED @ ER KOMMENTARER ETC.


Biblioteks s›gning i DOS @bar[1 mm]

Dette er en generel metode til at finde filer og biblioteker medDOS.

@bar[1mm]

Jeg vil ogs† denne gang lave et unit, der kan bruges i dine egneprogrammer. De tre eksempler, jeg har lavet ved hj‘lp af detteFilMotor unit, er: PCW_TREE, PCW_DIR og PCW_ATTR.

PCW_TREE udskriver biblioteks strukturen p† disken. Pr›v fxPCW_DIR C:\.

PCW_DIR lister navnene p† alle filer, der opfylder navnelisten,eventuelt ogs† de der findes i alle underbiblioteker. 

PCW_ATTR kan s‘tte og slette A bitten i filerne, alts† den bit,der fort‘ller om filen er blevet ‘ndret.

Det nye for b†de PCW_DIR og PCW_ATTR i forhold til DOS'enstilsvarende DIR og ATTRIB er, at de begge kan tage mere end denene filmaske, man ellers kan give. Du kan fx i PCW_DIR skrive

  PCW_DIR  /S  *.PAS  *.ASM

hvorefter du f†r alle PAS og ASM filerne listet fra dit nuv‘rendebibliotek og fra alle underliggende biblioteker.


Kan bruges n†r man tager sikkerhedskopier 
@BAR[1mm]

Grunden til, at jeg har lavet denne filmotor, skal findes i denmetode, jeg bruger til at tage min daglige sikkerhedskopi. Jegtager en stor kopi af alt hver uge, mens jeg hver dag kun tagerkopi af de filer, der har ‘ndret sig i l›bet af denne dag. Jegbruger XCOPY til at tage den daglige kopi p† denne m†de:

  XCOPY  \*.*  A:  /M  /S

hvorved alle ‘ndrede filer kopieres til disketten. 

Jeg er dog ikke interesseret i alle filerne. Fx er kopier affiler af typen BAK, EXE, COM osv ikke n›dvendige. Derfor fjernerjeg f›rst A flaget fra alle disse filer med DOS'ens ATTRIBkommando, s†ledes:

  ATTRIB  \*.BAK  /S  -A
  ATTRIB  \*.EXE  /S  -A
  ATTRIB  \*.COM  /S  -A

Dette tager skr‘kkelig med tid, da hver ATTRIB kommando skalgennems›ge hele disken. Jeg har selv ialt 12 forskelligefiltyper, jeg ikke vil have kopi af. 

Den filmotor, jeg her beskriver, kan derimod, med et enkelt kald,gennems›ge hele disken, og finde alle de ›nskede filer.

  PCW_ATTR \*.BAK *.EXE *.COM /S -A

Dette kald er hurtigt, omtrent lige s† hurtigt som et enkelt kaldtil ATTRIB, forudsat at nn i BUFFER=nn i config.sys er stor nok.L‘s mere om BUFFER= i den bl† kasse. 


Teknik  @BAR[1mm]

Til at finde filerne bruges de to rutiner FindFirst og FindNext,der er indbyggede rutiner i DOS'en. De bruges typisk s†ledes: 

    FindFirst('*.*',AnyFile,SR);
    while DosError=0 do begin
      BehandlFilen(SR,Sti);
      FindNext(SR);
    end;

Jeg vil forklare to af de ting, jeg har benyttet i filmotoren:procedure variable og rekursion. 

Procedure variabler giver et modul mulighed for at erkl‘re enprocedure og kalde denne, selvom proceduren f›rst bliver sat tilden rigtige rutine siden hen. Man kan p† denne m†de lave fx engenerel sorterings rutiner, der sorterer efter fornavn, efternavnetc alt efter hvilken sorterings funktion, der bruges, mens dengenerelle rutine ikke ‘ndres. Her angives hvilken udskriftsrutine, der skal bruges. 

DOS'ens filsystem er hirakisk opbygget, hvorfor det falder logiskat bruge rekursive rutiner til at behandle det. Den rekursiverutine er FindFiler i program listningen. 

N†r man programmerer rekursive programmer, skal man ikke t‘nke s†meget p† at de er rekursive. Man skal blot t‘nke p† en ›jeblikssituation, alts† hvad der sker ved et enkelt kald af proceduren.Bliver FindFiler kaldt med '*.PAS', findes f›rst alle Pascalfilerne (som samtidig bliver udskrevet med FilBehandl rutinen).Dette er der ikke noget rekursivt i. Derefter s›ges der efterbiblioteker med navnet '*.*'. Hvergang der findes en s†dan,kaldes en ny procedure, der kan behandle dette bibliotek,hvorefter det returnerer igen. At denne procedure tilf‘ldigvis erden samme, som vi allerede er i, nemlig FindFiler, er ikke nogetproblem; man skal blot t‘nke p† kaldet af FindFiler som enhelhed, der behandler et underliggende bibliotek, hvorefter detreturnerer igen. 

Det, man skal passe p† ved rekursiv programmering, er for detf›rste, at de gentagne kald skal kunne stoppes, og for det andet,at der ikke bruges for meget stakplads. 

1: De rekursive kald stopper her n†r der ikke er flere underbiblioteker, eller n†r der ikke er mere stakplads tilbage. DOSfilstrukturen kan principielt v‘re uendelig dyb.

2: Hver kald til FindFiler bruger 43 bytes til SearchRec, 81bytes til Sti, og omkring 10 bytes til andet brug. Hvert kaldbruger derfor omkring 130 bytes hvorfor biblioteker i 30 niveauervil bruge 3900 bytes. Bruges der for meget stak, stoppers›gningen til de underliggende biblioteker, da FindFiler som detf›rste laver testen 'if SPtr<300 then exit'.

FindFiler kan IKKE g† l‘ngere ned end omkring de 30 niveauer, daDOS ikke kan klare l‘ngere stier end 64 bytes. Hvis hvertunderbibliotek hedder B, s† kan der h›jst laves 32 niveauer, idetder altid skal v‘re et \ tegn mellem hver navn som i C:\B\B\B\B. 

FilMotoren er hurtig til at finde flere forskellige slags filerp† samme tid, da den udnytter, at DOS beholder en kopi af detsidst l‘ste i sine buffere. S›ges der efter *.BAK og *.EXE, dal‘ses biblioteket fra disk ved s›gningen efter *.BAK filerne,mens der ved n‘ste s›gning IKKE skal l‘ses fra disken. Derforkoster denne og efterf›lgende genneml›b kun CPU tid, og alts†ikke disk tilgang.


@box[
Det er vigtig at ens BUFFER=nn i CONFIG.SYS filen er stor nok tilat kunne rumme et helt bibliotek p† een gang, da FilMotorenellers vil blive meget langsommere. Der kan v‘re 16 filnavne ihver BUFFER man har erkl‘ret, hvorfor BUFFER=10 giver plads tilomkring 160 filer i et enkelt bibliotek, uden at DOS'en, ogdermed FilMotor'en, bliver sl›v. 
Husk: At et bibliotek ALDRIG bliver mindre, derfor vil det fyldeliges† meget som svarende til det antal filer, der h›jst harv‘ret i biblioteket p† et givet tidspunkt. Har der v‘ret 200filer, mens der kun er 150 tilbage, kr‘ves der derfor stadig200/16=13 buffere.
BUFFER= parameteren er et sp›rgsm†l om optimering, nogle gangevigtig, andre gange ret ligegyldig. Min egen er p† BUFFER=20.
]
